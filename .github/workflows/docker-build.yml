name: Build, Test, SAST, and Push Docker Image

on:
  push:
    branches:
      - feature/shopsmart-72
  pull_request:
    branches:
      - feature/shopsmart-72
  workflow_dispatch: # allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      ECR_REPO_URI: ${{ secrets.ECR_REPO_URI }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Verify Java Installation
        run: java -version

      - name: Build, Test, and Analyze with Maven
        run: |
          mvn clean verify sonar:sonar \
            -Dsonar.projectKey=ShopSmartSG_profile-service \
            -Dsonar.organization=shopsmartsg \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Log in to Amazon ECR Public
        run: |
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/l0d0i0v3

      - name: Build Docker image
        run: |
          docker build -t shopsmartsg/profile-service .
          docker tag shopsmartsg/profile-service:latest ${{ secrets.ECR_REPO_URI }}:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REPO_URI }}:latest

      - name: Upload SAST and Lint Reports
        uses: actions/upload-artifact@v3
        with:
          name: sonarcloud-reports
          path: |
            ./SAST-report
